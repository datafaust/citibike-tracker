{"version":3,"sources":["components/infoBox.module.css","App.js","components/Location.js","components/Match.js","components/FavoritesList.js","components/DocksSwitch.js","components/Favorites.js","components/InfoBox.js","components/Search.js","components/Leaf.js","components/leaf.module.css","components/location.module.css","serviceWorker.js","index.js"],"names":["module","exports","App","props","clickHandler","event","setState","isClicked","state","markerClick","station","e","selectedStation","filterStation","myStation","stationsStatus","data","stations","filter","d","station_id","console","log","selectedStationStatus","showInfo","setUserLocation","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","newViewport","height","width","zoom","viewport","userLocation","findMatches","wordToMatch","my_obj","place","regex","RegExp","name","match","updateMatches","newStateMatches","searchInput","stationsInfo","map","matches","handleInputChange","preventDefault","target","value","length","showMatches","alertClicked","address","arr","eval","logFavorites","favorites","push","removeFavorites","favorite","filterFavorites","newFavorites","listFavorites","handleShow","show","handleClose","buttonStyles","padding","margin","borderRadius","backgroundColor","color","boxShadow","btnClass","black","buttonIcons","pending","active_Icon","Icon","rejected","accepted","showStations","requestStationInfo","a","fetch","then","res","json","requestStationStatus","this","style","zIndex","display","marginLeft","marginRight","textShadow","marginTop","outlineColor","changeColor","Component","Location","onClick","src","Match","MatchStyles","ImgStyles","float","ImgStylesLoc","Item","className","action","lat","lon","toLowerCase","alt","FavoritesList","variant","onHide","Header","closeButton","Title","Body","Footer","DocksSwitch","btn_class","bind","Favorites","InfoBox","showData","textStyle","textAlign","info","classes","container","nl2br","num_bikes_available","num_ebikes_available","num_docks_available","buttonContainer","Button","Search","SearchStyles","placeholder","onChange","Leaf","markers","Marker","Map","center","top","bottom","TileLayer","attribution","url","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"8GACAA,EAAOC,QAAU,CAAC,UAAY,2BAA2B,gBAAkB,mC,+2ECYrEC,I,qBACJ,aAAYC,OAAQ,IAAD,yKACjB,yUAAMA,QADW,MAqEnBC,aAAe,SAACC,GACd,MAAKC,SACJ,CACEC,WAAW,MAAKC,MAAMD,aAxER,MA6EnBE,YAAc,SAACC,GAAD,OAAa,SAACC,GAE1B,MAAKL,SAAS,CAACM,gBAAgBF,IAC/B,MAAKG,cAAcH,KAhFF,MAmFnBG,cAAgB,SAACH,GAEf,IAAMI,EAAY,MAAKN,MAAMO,eAAeC,KAAKC,SAASC,QAAO,SAAAC,GAC/D,OAAQA,EAAEC,aAAeV,EAAQU,cAEnCC,QAAQC,IAAIR,EAAU,IACtB,MAAKR,SAAS,CAACiB,sBAAuBT,EAAU,GAAMU,UAAU,KAzF/C,MA6FnBC,gBAAkB,WAChBJ,QAAQC,IAAI,uCACZI,UAAUC,YAAYC,oBAAmB,SAAAC,GAEzC,IAAIJ,EAAkB,CAACI,EAASC,OAAOC,SAAUF,EAASC,OAAOE,WACjEX,QAAQC,IAAI,aAAcG,GAE1B,IAAIQ,EAAc,CAChBC,OAAQ,QACRC,MAAO,QACPJ,SAAUF,EAASC,OAAOC,SAC1BC,UAAWH,EAASC,OAAOE,UAC3BI,KAAM,IAGR,MAAK9B,SAAS,CACV+B,SAAUJ,EACVK,aAAcb,EACdI,SAAUJ,QA/GG,MAoHnBc,YAAc,SAACC,EAAaC,GAC1B,OAAOA,EAAOzB,KAAKC,SAASC,QAAO,SAAAwB,GAGnC,IAAMC,EAAQ,IAAIC,OAAOJ,EAAa,MAEtC,OAAOE,EAAMG,KAAKC,MAAMH,OA1HP,MA8HnBI,cAAe,WAEb,IACMC,EADa,MAAKT,YAAY,MAAK/B,MAAMyC,YAAa,MAAKzC,MAAM0C,cACpCC,KAAI,SAAAT,GAEvC,OAAOA,KAEP,MAAKpC,SAAS,CAAC8C,QAAQJ,KArIN,MAwInBK,kBAAoB,SAAChD,GACnBA,EAAMiD,iBAE4B,IAA9BjD,EAAMkD,OAAOC,MAAMC,QAIrB,MAAKnD,SAAS,CAAC2C,YAAa5C,EAAMkD,OAAOC,QACzC,MAAKT,iBAJL,MAAKzC,SAAS,CAAC2C,YAAa,GAAIS,aAAa,EAAON,QAAS,MA5I9C,MAmJnBO,aAAe,SAACC,SACd,IAAIC,IAAMC,KAAKF,QAAQL,OAAOC,OAC9BnC,QAAQC,IAAIuC,KACZ,IAAI5B,YAAc,CAChBC,OAAQ,QACRC,MAAO,QACPJ,SAAU8B,IAAI,GACd7B,UAAW6B,IAAI,GACfzB,KAAM,IAER,MAAK9B,SAAS,CAAC+B,SAAUJ,YAAamB,QAAS,MA7J9B,MAgKnBW,aAAa,WACX1C,QAAQC,IAAI,qBACZD,QAAQC,IAAI,MAAKd,MAAMI,iBACvB,MAAKJ,MAAMwD,UAAUC,KAAK,MAAKzD,MAAMI,kBAnKpB,MAsKnBsD,gBAAgB,SAACC,GAAD,OAAc,SAACxD,GAC7BU,QAAQC,IAAI6C,GACZ,MAAKC,gBAAgBD,KAxKJ,MA2KnBC,gBAAkB,SAACD,GAEjB,IAAIE,EACJA,EAAe,MAAK7D,MAAMwD,UAAU9C,QAAO,SAAAC,GACzC,OAAQA,EAAEC,YAAc+C,EAAS/C,cAEnC,MAAKd,SAAS,CAAC0D,UAAWK,KAjLT,MAsLnBC,cAAe,WACbjD,QAAQC,IAAI,MAAKd,MAAMwD,WACvB,MAAKO,cAxLY,MA2LnBA,WAAa,WACXlD,QAAQC,IAAI,4BACZ,MAAKhB,SAAS,CAAEkE,MAAM,KA7LL,MAgMnBC,YAAc,WACZ,MAAKnE,SAAS,CAAEkE,MAAM,KA/LtB,MAAKhE,MAAQ,CACX6B,SAAU,CACRH,OAAQ,QACRC,MAAO,QACPJ,SAAU,QACVC,WAAY,OACZI,KAAM,IAERsC,aAAc,CAGZC,QAAS,UACTC,OAAQ,IACRC,aAAa,MACbC,gBAAiB,QACjBC,MAAM,OACNC,UAAW,oBAGbC,SAAS,cACTC,OAAM,EACN3E,WAAU,EACD4E,YAAY,CACTC,QAAQ,CAACC,YAAY,0BAA0BC,KAAK,2BACpDC,SAAS,CAACF,YAAY,yBAAyBC,KAAK,0BACpDE,SAAS,CAACH,YAAY,0BAA0BC,KAAK,4BAEjElD,KAAM,GACNa,YAAa,GACbC,aAAc,GACdnC,eAAgB,GAChB2C,aAAY,EACZ+B,cAAc,EACdjE,UAAU,EACVZ,gBAAiB,GACjBW,sBAAuB,GACvBe,aAAc,GACdc,QAAQ,GACRY,UAAU,GACVQ,MAAK,GAzCU,M,iWA8CE,IAAD,OACZkB,EAAkB,8SAAG,qJAAAC,EAAA,sEACnBC,MAAM,iEACXC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GAAG,OACP,EAAKxF,SAAS,CAAC4C,aAAc4C,EAAKL,cAAc,OAJzB,2CAAH,qDAOlBO,EAAoB,8SAAG,qJAAAL,EAAA,sEACrBC,MAAM,4DACXC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GAAG,OACP,EAAKxF,SAAS,CAACS,eAAgB+E,OAJN,2CAAH,qDAO1BJ,IACAM,M,oCAIAC,KAAK3F,SAAS,CAAC2E,SAAS,kB,+BAsJxB,OACE,sEACI,kEAAKiB,MAfK,CACdrE,SAAU,WACVsE,OAAQ,OACRC,QAAS,OACTjE,MAAO,MAEPkE,WAAY,MACZC,YAAa,MACbC,WAAY,oBACZC,UAAW,OAOL,iEAAIN,MAAO,CAACnB,MAAM,UAAW0B,aAAa,UAAU,6EACpD,iEAAIP,MAAO,CAACnB,MAAM,UAAW0B,aAAa,UAAU,8EAEtD,2DAAC,kDAAD,CACErD,QAAS6C,KAAKzF,MAAM4C,QACpBO,aAAcsC,KAAKtC,eAErB,2DAAC,0DAAD,CACEe,aAAcuB,KAAKzF,MAAMkE,aACzBJ,cAAe2B,KAAK3B,cACpBC,WAAY0B,KAAK1B,WACjBE,YAAawB,KAAKxB,YAClBD,KAAMyB,KAAKzF,MAAMgE,KACjBR,UAAWiC,KAAKzF,MAAMwD,UACtBE,gBAAiB+B,KAAK/B,kBAExB,2DAAC,qDAAD,CACE5B,aAAc2D,KAAKzF,MAAM8B,aACzBb,gBAAiBwE,KAAKxE,gBACtBiD,aAAcuB,KAAKzF,MAAMkE,eAE3B,2DAAC,wDAAD,CACEA,aAAcuB,KAAKzF,MAAMkE,aACzBtE,aAAc6F,KAAK7F,aACnB+E,YAAac,KAAKzF,MAAM2E,YACxB5E,UAAW0F,KAAKzF,MAAMD,UACtBmG,YAAaT,KAAKS,YAClBxB,MAAOe,KAAKzF,MAAM0E,MAClBD,SAAUgB,KAAKzF,MAAMyE,WAEvB,2DAAC,gDAAD,CACE5C,SAAU4D,KAAKzF,MAAM6B,SACrBa,aAAc+C,KAAKzF,MAAM0C,aACzBuC,aAAcQ,KAAKzF,MAAMiF,aACzBhF,YAAawF,KAAKxF,YAClBiE,aAAcuB,KAAKvB,aACnBrB,kBAAmB4C,KAAK5C,oBAE1B,2DAAC,oDAAD,mJACEzC,gBAAiBqF,KAAKzF,MAAMI,gBAC5BW,sBAAuB0E,KAAKzF,MAAMe,sBAClCC,SAAUyE,KAAKzF,MAAMgB,SACrBkD,aAAcuB,KAAKzF,MAAMkE,aACzBX,aAAckC,KAAKlC,cALrB,kBAMmBkC,KAAKzF,MAAMI,uB,KAxQtB+F,8CA+QHzG,2B,uFCxRT0G,G,uLAcE,OACI,yBAAKV,MAVS,CACdrE,SAAU,WACVsE,OAAQ,OACRhE,MAAO,KACPkE,WAAW,KACXC,YAAa,MACbE,UAAW,QAKP,4BACIN,MAASD,KAAK9F,MAAMuE,aACpBmC,QAASZ,KAAK9F,MAAMsB,iBAEpB,yBAAKqF,IAAI,0E,GApBNH,cA4BRC,O,+FC7BTG,E,iLACQ,IAAD,OAECC,EAAc,CAChB9E,OAAQ,MACRC,MAAO,MACPgE,OAAQ,OACRvB,OAAQ,QAGNqC,EAAY,CACdC,MAAO,QAGPhF,OAAQ,KACRC,MAAO,MAGLgF,EAAe,CACjBD,MAAO,OAGPhF,OAAQ,KACRC,MAAO,MAGX,OACI,6BACK,4BAEG8D,KAAK9F,MAAMiD,QAAQD,KAAI,SAAAL,GACnB,IAAMc,EAAQd,EAAMD,KACxB,OAAQ,kBAAC,IAAUuE,KAAX,CACIlB,MAAOc,EACPK,UAAU,UACVC,QAAM,EACN9D,MAAK,WAAMV,EAAMyE,IAAZ,aAAoBzE,EAAM0E,IAA1B,KAENX,QAAS,SAACjD,GAAD,OAAa,EAAKzD,MAAMwD,aAAaC,KANjD,UAOOA,EAAQ6D,eACP,yBACIvB,MAAOe,EACPH,IAAI,gEAAgEY,IAAM,UAE9E,yBACIxB,MAAOiB,EACPL,IAAI,uEAAuEY,IAAK,sB,GA9CpGf,aAyDLI,O,uGCxDTY,E,iLACQ,IAAD,OAWD3D,EAAW,KAgBf,OAfGiC,KAAK9F,MAAM6D,YACdA,EAEIiC,KAAK9F,MAAM6D,UAAUb,KAAI,SAACgB,GAAD,OACrB,yBAAK+B,MAAO,CAAC/D,MAAM,SACdgC,EAAStB,KACV,4BACIgE,QAAS,EAAK1G,MAAM+D,gBAAgBC,IADxC,UAUR,yBAAK+B,MA1BS,CACdrE,SAAU,WACVsE,OAAQ,OACRhE,MAAO,KACPkE,WAAW,MACXC,YAAa,KACbE,UAAW,QAqBP,4BACIoB,QAAQ,UACR1B,MAAOD,KAAK9F,MAAMuE,aAClBmC,QAASZ,KAAK9F,MAAMmE,eAEpB,yBAAKwC,IAAI,mEAGT,kBAAC,IAAD,CACItC,KAAMyB,KAAK9F,MAAMqE,KACjBqD,OAAQ5B,KAAK9F,MAAMsE,aACvB,kBAAC,IAAMqD,OAAP,CAAcC,aAAW,GACzB,kBAAC,IAAMC,MAAP,2BAEA,kBAAC,IAAMC,KAAP,KACI,6BACKjE,IAGT,kBAAC,IAAMkE,OAAP,KACA,kBAAC,IAAD,CACIN,QAAQ,YACRf,QAASZ,KAAK9F,MAAMsE,aAFxB,gB,GAlDQkC,aA8DbgB,O,uFChETQ,E,iLAuBE,OACI,yBAAKjC,MArBY,CACjBrE,SAAU,WACVsE,OAAQ,OACRhE,MAAO,KACPkE,WAAW,MACXC,YAAa,KACbE,UAAW,QAiBP,4BACIa,UAAWpB,KAAK9F,MAAMiI,UACtBvB,QAASZ,KAAK9F,MAAMuG,YAAY2B,KAAKpC,OAErC,yBAAKa,IAAI,oE,GA9BHH,aAqCXwB,O,iICZAG,E,iLAtBP,OACI,6BACI,4BACIpC,MAAO,CAGHvB,QAAS,UACTC,OAAQ,IACRC,aAAa,MACbC,gBAAiB,QACjBC,MAAM,OACNC,UAAW,oBAEf6B,QAASZ,KAAK9F,MAAM4D,cAErB,yBAAK+C,IAAI,+E,GAjBJH,aCGlB4B,E,2MAEFC,SAAS,WACLnH,QAAQC,IAAI,EAAKnB,MAAMS,kB,wEAKvB,IAAM6H,EAAU,CACZC,UAAW,UAWXC,EAAM,KA4CV,OA3CG1C,KAAK9F,MAAMqB,WACdmH,EACI,6BACI,yBAAKzC,MAZQ,CACjBI,YAAa,MACbD,WAAY,MACZG,UAAW,OAUH,kBAAC,EAAD,CACI9B,aAAcuB,KAAK9F,MAAMuE,aACzBX,aAAckC,KAAK9F,MAAM4D,aACzBnD,gBAAiBqF,KAAK9F,MAAMS,mBAGxC,6BACI,wBAAIsF,MAAOuC,GAAX,UAA0BxC,KAAK9F,MAAMS,gBAAgBiC,QAEzD,yBAAKwE,UAAWuB,IAAQC,WACpB,yBAAK3C,MAAOuC,GAAYK,IAAM,GAAD,OAAI7C,KAAK9F,MAAMoB,sBAAsBwH,oBAArC,aAC7B,yBAAK7C,MAAOuC,GAAYK,IAAM,GAAD,OAAI7C,KAAK9F,MAAMoB,sBAAsByH,qBAArC,cAC7B,yBAAK9C,MAAOuC,GAAYK,IAAM,GAAD,OAAI7C,KAAK9F,MAAMoB,sBAAsB0H,oBAArC,cAGjC,8BAGA,6BACA,6BACA,6BACA,yBAAK5B,UAAWuB,IAAQM,iBACpB,6BACA,kBAACC,EAAA,EAAD,KACI,yBAAKrC,IAAI,wDACT,2CAGJ,6BACA,kBAACqC,EAAA,EAAD,KACI,yBAAKrC,IAAI,6DACT,+CASR,6BACK6B,O,GAlEKhC,aAwEP4B,O,gHC7CAa,G,6NA3BXC,aAAe,CACXxH,SAAU,WACV+C,OAAQ,OACRuB,OAAO,OACPhE,MAAO,MACP0C,aAAc,OACdF,QAAS,KACT0B,WAAY,MACZC,YAAa,MACbE,UAAW,O,wEAMX,OACI,6BACI,2BACIN,MAAOD,KAAKoD,aACZC,YAAY,gCACZC,SAAUtD,KAAK9F,MAAMkD,yB,GAtBpBsD,cCcf6C,E,iLAEQ,IAAD,OAEDC,EAAS,KACVxD,KAAK9F,MAAMsF,eACdgE,EAEIxD,KAAK9F,MAAM+C,aAAalC,KAAKC,SAASkC,KAAI,SAACzC,GAAD,OACtC,kBAACgJ,EAAA,EAAD,CAEI7H,SAAU,CAACnB,EAAQ6G,IAAK7G,EAAQ8G,KAChCX,QAAS,EAAK1G,MAAMM,YAAYC,SAO5C,IAWMmB,EAAW,CAACoE,KAAK9F,MAAMkC,SAASN,SAAUkE,KAAK9F,MAAMkC,SAASL,WAEpE,OACI,6BACI,kBAAC,EAAD,CACE0C,aAAcuB,KAAK9F,MAAMuE,aACzBrB,kBAAmB4C,KAAK9F,MAAMkD,oBAEhC,kBAACsG,EAAA,EAAD,CAAKC,OAAQ/H,EACRO,KAAM6D,KAAK9F,MAAMkC,SAASD,KAC1B8D,MArBK,CACdrE,SAAU,WACVgI,IAAK,IACLC,OAAQ,IACR3H,MAAO,QACPD,OAAQ,SAkBA,kBAAC6H,EAAA,EAAD,CACIC,YAAY,0EACZC,IAAI,uDAELR,Q,GA9CJ9C,aAqDJ6C,O,4ECtEfxJ,EAAOC,QAAU,CAAC,KAAO,qB,wCCAzBD,EAAOC,QAAU,CAAC,IAAM,wB,iHCWJiK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASvH,MACvB,2DCZNwH,IAASC,OAAO,kBAACrK,EAAA,EAAD,MAASsK,SAASC,eAAe,SD2H3C,kBAAmB/I,WACrBA,UAAUgJ,cAAcC,MAAM9E,MAAK,SAAA+E,GACjCA,EAAaC,kB","file":"static/js/main.0fe1e5a1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"infoBox_container__1bzFz\",\"buttonContainer\":\"infoBox_buttonContainer__3o83o\"};","\n//import logo from './logo.svg';\n//import './App.css';\n\nimport React, { Component } from 'react';\nimport Leaf from './components/Leaf';\nimport InfoBox from './components/InfoBox';\nimport Location from './components/Location';\nimport Match from './components/Match'\nimport classes from './app.module.css';\nimport FavoritesList from './components/FavoritesList';\nimport DocksSwitch from './components/DocksSwitch';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      viewport: {\n        height: \"100vh\",\n        width: \"100vw\",\n        latitude: 40.7128,\n        longitude: -74.0060,\n        zoom: 10\n      },\n      buttonStyles :{\n        //width:\"40px\",\n        //height:\"40px\",\n        padding: \"4px 4px\",\n        margin: \"0\",\n        borderRadius:\"50%\",\n        backgroundColor: \"white\",\n        color:\"#FFF\",\n        boxShadow: \"3px 3px 3px #999\"\n        //border: \"10px solid rgba(255,255,255,.5)\"\n      },\n      btnClass:\"whiteButton\",\n      black:true,\n      isClicked:false,\n               buttonIcons:{\n                  pending:{active_Icon:\"../assets/switchOff.png\",Icon:\"../assets/switchOff.png\"},\n                  rejected:{active_Icon:\"../assets/switchOn.png\",Icon:\"../assets/switchOn.png\"},\n                  accepted:{active_Icon:\"../assets/switchOff.png\",Icon:\"../assets/switchOff.png\"}\n               },\n      zoom: 10,\n      searchInput: \"\",\n      stationsInfo: [],\n      stationsStatus: [],\n      showMatches:false,\n      showStations: false,\n      showInfo: false,\n      selectedStation: [],\n      selectedStationStatus: [],\n      userLocation: {},\n      matches:[],\n      favorites:[],\n      show:false\n    };\n  }\n\n\n  componentDidMount() {\n    const requestStationInfo = async()=> {\n      await fetch('https://gbfs.citibikenyc.com/gbfs/en/station_information.json')\n      .then(res => res.json())\n      .then(res=>\n        this.setState({stationsInfo: res, showStations: true}))\n    }\n\n    const requestStationStatus = async()=> {\n      await fetch('https://gbfs.citibikenyc.com/gbfs/en/station_status.json')\n      .then(res => res.json())\n      .then(res=>\n        this.setState({stationsStatus: res}))\n    }\n\n    requestStationInfo();\n    requestStationStatus();\n  }\n\n  changeColor(){\n    this.setState({btnClass:\"blackButton\"})\n  }\n\n  clickHandler = (event) =>{\n    this.setState(\n     {\n       isClicked:!this.state.isClicked // this is gonna toggle everytime you click //\n     }\n    );\n  }\n\n  markerClick = (station) => (e) =>{\n    //console.log(station)\n    this.setState({selectedStation:station});\n    this.filterStation(station);\n  }\n\n  filterStation = (station) => {\n    //filter station from stationStatus\n    const myStation = this.state.stationsStatus.data.stations.filter(d => {\n      return (d.station_id === station.station_id);\n    })\n    console.log(myStation['0']);\n    this.setState({selectedStationStatus: myStation['0'], showInfo: true});\n    \n  }\n\n  setUserLocation = () => {\n    console.log(\"attempting to get user location ...\")\n    navigator.geolocation.getCurrentPosition(position => {\n  \n    let setUserLocation = [position.coords.latitude, position.coords.longitude];\n    console.log('user is at', setUserLocation);\n\n    let newViewport = {\n      height: \"100vh\",\n      width: \"100vw\",\n      latitude: position.coords.latitude,\n      longitude: position.coords.longitude,\n      zoom: 15\n    };\n\n    this.setState({\n        viewport: newViewport,\n        userLocation: setUserLocation,\n        position: setUserLocation\n    });\n    });\n  }\n\n  findMatches = (wordToMatch, my_obj) => {\n    return my_obj.data.stations.filter(place => {\n    //console.log(place.name)\n    // here we need to figure out the matches\n    const regex = new RegExp(wordToMatch, 'gi');\n    //console.log(place.name.match(regex))\n    return place.name.match(regex)\n    });\n  }\n\n  updateMatches =() => {\n    //console.log(this.state.searchInput)\n    const matchArray = this.findMatches(this.state.searchInput, this.state.stationsInfo);\n    const newStateMatches = matchArray.map(place => {\n    //console.log(place);\n    return place \n    });\n    this.setState({matches:newStateMatches})\n  }\n\n  handleInputChange = (event) => {\n    event.preventDefault()\n    //console.log(event.target.value)\n    if (event.target.value.length === 0) {\n      this.setState({searchInput: \"\", showMatches: false, matches: [] })\n      return\n  }\n      this.setState({searchInput: event.target.value })\n      this.updateMatches()  \n  }\n \n  alertClicked = (address)=> {\n    let arr = eval(address.target.value);\n    console.log(arr)\n    let newViewport = {\n      height: \"100vh\",\n      width: \"100vw\",\n      latitude: arr[0],\n      longitude: arr[1],\n      zoom: 15\n    }\n    this.setState({viewport: newViewport, matches: []});\n  }\n\n  logFavorites=()=>{\n    console.log('logging favorites')\n    console.log(this.state.selectedStation);\n    this.state.favorites.push(this.state.selectedStation);\n  }\n\n  removeFavorites=(favorite) => (e) =>{\n    console.log(favorite)\n    this.filterFavorites(favorite)\n  }\n\n  filterFavorites = (favorite) => {\n    //filter station from stationStatus\n    let newFavorites=[]\n    newFavorites = this.state.favorites.filter(d => {\n      return (d.station_id != favorite.station_id);\n    })\n    this.setState({favorites: newFavorites});\n    \n  }\n\n\n  listFavorites =()=>{\n    console.log(this.state.favorites)\n    this.handleShow();\n  }\n\n  handleShow = () => {\n    console.log('attempting to show modal')\n    this.setState({ show: true });\n  };\n\n  handleClose = () => {\n    this.setState({ show: false });\n  };\n\n\n  render() {\n\n    const textStyle={\n      textAlign: \"center\"\n     }\n    \n    const titleText={\n      position: \"absolute\",\n      zIndex: \"1000\",\n      display: \"flex\",\n      width: \"10%\",\n      //margin: \"auto\"\n      marginLeft: \"45%\",\n      marginRight: \"45%\",\n      textShadow: \"2px 2px 0px  #fff\",\n      marginTop: \"1%\"\n    }\n    \n\n    return (\n      <div>\n          <div style={titleText}>\n            <h2 style={{color:\"#00008B\", outlineColor:\"coral\"}}><b>City</b></h2>\n            <h2 style={{color:\"#00BFFF\", outlineColor:\"coral\"}}><b>bike</b></h2>\n          </div>\n          <Match \n            matches={this.state.matches}\n            alertClicked={this.alertClicked}\n            />\n          <FavoritesList \n            buttonStyles={this.state.buttonStyles}\n            listFavorites={this.listFavorites}\n            handleShow={this.handleShow}\n            handleClose={this.handleClose}\n            show={this.state.show}\n            favorites={this.state.favorites}\n            removeFavorites={this.removeFavorites}\n            />\n          <Location  \n            userLocation={this.state.userLocation}\n            setUserLocation={this.setUserLocation}\n            buttonStyles={this.state.buttonStyles}\n            />\n          <DocksSwitch \n            buttonStyles={this.state.buttonStyles}\n            clickHandler={this.clickHandler}\n            buttonIcons={this.state.buttonIcons}\n            isClicked={this.state.isClicked}\n            changeColor={this.changeColor}\n            black={this.state.black}\n            btnClass={this.state.btnClass}\n            />\n          <Leaf \n            viewport={this.state.viewport}\n            stationsInfo={this.state.stationsInfo}\n            showStations={this.state.showStations}\n            markerClick={this.markerClick}\n            buttonStyles={this.buttonStyles}\n            handleInputChange={this.handleInputChange}\n            />\n          <InfoBox \n            selectedStation={this.state.selectedStation}\n            selectedStationStatus={this.state.selectedStationStatus}\n            showInfo={this.state.showInfo}\n            buttonStyles={this.state.buttonStyles}\n            logFavorites={this.logFavorites}\n            selectedStation={this.state.selectedStation}\n            />\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n/**\n * checkData=()=>{\n    //console.log(this.state.stationsInfo)\n    //this.state.stationsInfo.data.stations.map(e=>{\n    //  console.log(e)\n    //})\n\n    //console log station status\n    this.state.stationsStatus.data.stations.map(e=>{\n      console.log(e)\n    })\n  }\n * \n\n\n     checkData=()=>{\n        this.props.stationsInfo.data.stations.map(e=>{\n          console.log(e)\n        })\n      }\n      \n */","import React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\nimport classes from './location.module.css'\n\nclass Location extends Component {\n\n    \n    render() {\n\n        const locStyles = {\n            position: \"absolute\",\n            zIndex: \"1000\",\n            width: \"5%\",\n            marginLeft:\"5%\",\n            marginRight: \"80%\",\n            marginTop: \"80%\",\n        }\n\n        return (\n            <div style={locStyles}>\n                <button \n                    style = {this.props.buttonStyles}\n                    onClick={this.props.setUserLocation}\n                    >\n                    <img src=\"https://img.icons8.com/windows/32/000000/worldwide-location.png\"></img>\n                </button> \n            </div>\n        );\n    }\n}\n\n\nexport default Location;","import React, { Component } from 'react';\nimport {ListGroup, Form} from 'react-bootstrap';\n\nclass Match extends Component {\n    render() {\n\n        const MatchStyles = {\n            height: \"10%\",\n            width: \"80%\",\n            zIndex: \"1000\",\n            margin: \"auto\"\n        }\n    \n        const ImgStyles = {\n            float: \"right\",\n            //display: \"inline\",\n            //marginTop:\"-11%\",\n            height: \"4%\",\n            width: \"4%\"\n        }\n    \n        const ImgStylesLoc = {\n            float: \"left\",\n            //display: \"inline\",\n            //marginTop:\"-11%\",\n            height: \"4%\",\n            width: \"4%\"\n        }\n\n        return (\n            <div>\n                 <li>\n                {\n                    this.props.matches.map(match => {\n                        const address=match.name;\n                    return  <ListGroup.Item\n                                style={MatchStyles} \n                                className=\"Matches\"\n                                action  \n                                value={`[${match.lat}, ${match.lon}]`}\n                                // function expressions could cause this to rerender unnecessarily.\n                               onClick={(address) => this.props.alertClicked(address)}> \n                               {`${address.toLowerCase()}`}\n                                    <img \n                                        style={ImgStyles}\n                                        src=\"https://img.icons8.com/ios-glyphs/32/000000/up-left-arrow.png\" alt = \"arrow\">\n                                    </img>\n                                    <img\n                                        style={ImgStylesLoc} \n                                        src=\"https://img.icons8.com/material/24/000000/worldwide-location--v1.png\" alt= \"userloc\"> \n                                    </img>\n                            </ListGroup.Item>\n                        })\n                }\n                </li>\n            </div>\n        );\n    }\n}\n\nexport default Match;","import React, { Component } from 'react';\nimport { Button, Modal, cardClass } from 'react-bootstrap';\n\n\nclass FavoritesList extends Component {\n    render() {\n\n        const favStyles = {\n            position: \"absolute\",\n            zIndex: \"1000\",\n            width: \"5%\",\n            marginLeft:\"80%\",\n            marginRight: \"5%\",\n            marginTop: \"65%\",\n        }\n\n        let favorites =null;\n        if(this.props.favorites) {\n        favorites = (\n            \n            this.props.favorites.map((favorite) =>\n                <div style={{width:\"100%\"}}>\n                    {favorite.name}\n                    <button \n                        onClick={this.props.removeFavorites(favorite)}\n                        >X</button>\n                </div>\n                )\n            \n        )\n        }\n\n        return (\n            <div style={favStyles}>\n                <button\n                    variant=\"primary\"\n                    style={this.props.buttonStyles}\n                    onClick={this.props.listFavorites}\n                >\n                    <img src=\"https://img.icons8.com/windows/32/000000/add-to-favorites.png\"></img>\n                </button>\n\n                    <Modal \n                        show={this.props.show} \n                        onHide={this.props.handleClose}>\n                    <Modal.Header closeButton>\n                    <Modal.Title>My Favorites List</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div>\n                            {favorites}\n                        </div>\n                    </Modal.Body>\n                    <Modal.Footer>\n                    <Button \n                        variant=\"secondary\" \n                        onClick={this.props.handleClose}>\n                        Close\n                    </Button>\n                    </Modal.Footer>\n                    </Modal>          \n            </div>\n        );\n    }\n}\n\nexport default FavoritesList;           ","import React, { Component } from 'react';\n\nclass DocksSwitch extends Component {\n    render() {\n\n        const switchStyles = {\n            position: \"absolute\",\n            zIndex: \"1000\",\n            width: \"5%\",\n            marginLeft:\"80%\",\n            marginRight: \"5%\",\n            marginTop: \"80%\",\n        }\n\n        const buttonStyles ={\n            padding: \"7px 7px\",\n            margin: \"0\",\n            borderRadius:\"50%\",\n            backgroundColor: \"white\",\n            color:\"#FFF\",\n            boxShadow: \"3px 3px 3px #999\"\n        }\n\n        //let btn_class = this.props.black ? \"blackButton\" : \"whiteButton\";\n\n        return (\n            <div style={switchStyles}>\n\n                <button\n                    className={this.props.btn_class} \n                    onClick={this.props.changeColor.bind(this)}\n                    >\n                    <img src=\"https://img.icons8.com/metro/26/000000/switch-off--v3.png\"></img>   \n                </button> \n            </div>\n        );\n    }\n}\n\nexport default DocksSwitch;\n\n/**\n *  <button\n                    style={buttonStyles}\n                >\n                    <img src=\"https://img.icons8.com/metro/26/000000/switch-off--v3.png\"></img>   \n                </button> \n */","import React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\n\nclass Favorites extends Component {\n    render() {\n        return (\n            <div>\n                <button\n                    style={{\n                        //width:\"40px\",\n                        //height:\"40px\",\n                        padding: \"2px 2px\",\n                        margin: \"0\",\n                        borderRadius:\"50%\",\n                        backgroundColor: \"white\",\n                        color:\"#FFF\",\n                        boxShadow: \"3px 3px 3px #999\"\n                    }}\n                    onClick={this.props.logFavorites}\n                >\n                   <img src=\"https://img.icons8.com/material-sharp/24/000000/add-to-favorites.png\"></img> \n                </button>        \n            </div>\n        );\n    }\n}\n\nexport default Favorites;           ","import React, { Component } from 'react';\nimport classes from './infoBox.module.css'\nimport nl2br from 'react-newline-to-break';\nimport { Button } from 'react-bootstrap';\nimport Favorites from './Favorites';\n\nclass InfoBox extends Component {\n\n    showData=()=>{\n        console.log(this.props.selectedStation)\n    }\n\n    render() {\n\n        const textStyle={\n            textAlign: \"center\"\n        }\n\n        const favoritesStyle={\n            marginRight: \"10%\",\n            marginLeft: \"90%\",\n            marginTop: \"2%\"\n        }\n\n        const br = `\\n`;\n\n        let info =null;\n        if(this.props.showInfo) {\n        info = (\n            <div>\n                <div style={favoritesStyle}>\n                    <Favorites \n                        buttonStyles={this.props.buttonStyles}\n                        logFavorites={this.props.logFavorites}\n                        selectedStation={this.props.selectedStation}\n                    />\n                </div>\n            <div>\n                <h3 style={textStyle}>{`${this.props.selectedStation.name}`}</h3>\n            </div>\n            <div className={classes.container}>\n                <div style={textStyle}>{nl2br(`${this.props.selectedStationStatus.num_bikes_available}\\nBikes`)}</div>\n                <div style={textStyle}>{nl2br(`${this.props.selectedStationStatus.num_ebikes_available}\\nEbikes`)}</div> \n                <div style={textStyle}>{nl2br(`${this.props.selectedStationStatus.num_docks_available}\\nDocks`)}</div>\n            </div>\n\n            <div>\n\n            </div>\n            <br></br>\n            <br></br>\n            <br></br>\n            <div className={classes.buttonContainer}>\n                <div>\n                <Button>\n                    <img src=\"https://img.icons8.com/office/40/000000/bicycle.png\"/>\n                    <div>Buy Pass</div>\n                </Button>\n                </div>\n                <div>\n                <Button>\n                    <img src=\"https://img.icons8.com/office/40/000000/waypoint-map.png\"/>\n                    <div>Plan Ride</div>\n                </Button>\n                </div>\n            </div>\n            </div>\n            )\n        }\n\n        return (\n            <div>\n                {info}\n            </div>\n        );\n    }\n}\n\nexport default InfoBox;","import React, { Component } from 'react';\nimport {ListGroup, Form} from 'react-bootstrap';\nimport classes from './search.module.css';\n\nclass Search extends Component {\n    \n    SearchStyles = {\n        position: \"absolute\",\n        margin: \"auto\",\n        zIndex:\"1000\",\n        width: \"50%\",\n        borderRadius: \"25px\",\n        padding: \"2%\",\n        marginLeft: \"25%\",\n        marginRight: \"25%\",\n        marginTop: \"10%\"\n    }\n    \n    render() {\n    \n\n        return (\n            <div>\n                <input\n                    style={this.SearchStyles}\n                    placeholder=\"Search for a Link Near you...\"\n                    onChange={this.props.handleInputChange}\n                />   \n            </div>\n        );\n    }\n}\n\nexport default Search  ","import React, {Component} from 'react';\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet';\nimport classes from './leaf.module.css';\nimport Search from './Search';\n//import './leaf.css'\n//import InfoBox from './InfoBox';\nimport { Button } from 'react-bootstrap';\n//import Search from './Search';\n//import Match from './Match';\n//import Modal from './Modal';\n//import L from 'leaflet';\n//import Routing from \"./RoutingMachine\";\n//import { Row, Col, Grid, Container } from 'react-bootstrap';\n//import ErrorBoundary from '../ErrorBoundary/ErrorBoundary'\n\n\n \nclass Leaf extends Component {\n\n    render() {\n\n        let markers =null;\n        if(this.props.showStations) {\n        markers = (\n            \n            this.props.stationsInfo.data.stations.map((station) =>\n                <Marker \n                   \n                    position={[station.lat, station.lon]}\n                    onClick={this.props.markerClick(station)}>\n                </Marker>\n                )\n            \n        )\n        }\n\n        const mapStyles = {\n            position: \"relative\",\n            top: \"0\",\n            bottom: \"0\",\n            width: \"100vw\",\n            height: \"70vh\"\n          }\n\n         \n    \n       \n        const position = [this.props.viewport.latitude, this.props.viewport.longitude]\n        //const position = [40.7484, -73.9857]\n        return (\n            <div>\n                <Search\n                  buttonStyles={this.props.buttonStyles}\n                  handleInputChange={this.props.handleInputChange}\n                    />\n                <Map center={position} \n                     zoom={this.props.viewport.zoom}\n                     style= {mapStyles}\n                     >\n                    <TileLayer\n                        attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    />\n                      {markers}\n                </Map>  \n            </div>\n        );\n    }\n}\n\nexport default Leaf;\n\n/**\n * \n * const markers = this.props.data.stations.map((station) =>\n        <Marker \n          position={[station.lat, station.lon]}\n          onClick={this.markerClick.bind(this,station)}>\n          <Popup>\n            <div style={{\"textAlign\": \"left\"}}>\n            <span> \n                  <h5 style={{\"textAlign\": \"left\"}}>hello</h5>\n                  <p></p>\n            </span>\n            </div>\n          </Popup>\n        </Marker>\n              );\n\n\n\n\n              const markers = this.props.stations.data.map((station) =>\n        <Marker \n          position={[station.lat, station.lon]}\n          onClick={this.markerClick.bind(this,station)}>\n          <Popup>\n          </Popup>\n        </Marker>\n              );\n */\n\n\n /**\n  * \n  * const Leaf = ( props ) => {\n\n    const checkData=()=>{\n        props.stations.data.stations.map(e=>{\n          console.log(e)\n        })\n      }\n\n    const markers = this.props.stations.data.stations.map((station) =>\n      <Marker \n        position={[station.lat, station.lon]}>\n      </Marker>\n            );\n\n\n    const position = [props.viewport.latitude, props.viewport.longitude]\n    \n    return (\n        <div>\n                <button onClick={checkData}>check props</button>\n                <Map center={position} zoom={14}>\n                    <TileLayer\n                        attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    />\n                    \n                    <Marker position={position}>\n                        <Popup>\n                            A pretty CSS3 popup. <br /> Easily customizable.\n                        </Popup>\n                    </Marker>\n                </Map>  \n            </div>\n    )\n}\n\n\n\n\n\n\n\n//latest\nlet markers =null;\n        if(this.props.stations.data.stations) {\n        markers = (\n            <div>\n            {\n            this.props.stations.data.stations.map((station) =>\n                <Marker \n                    position={[station.lat, station.lon]}>\n                </Marker>\n                )\n            }\n            </div>\n        )\n        }\n\n\n  * \n\n\n  icon\n\n   icon={ \n\n\n                      new L.Icon({\n                      iconUrl: require('../assets/bikeLevelGreat.png'),\n                      iconRetinaUrl: require('../assets/bikeLevelGreat.png'),\n                      iconAnchor: null,\n                      popupAnchor: null,\n                      shadowUrl: null,\n                      shadowSize: null,\n                      shadowAnchor: null,\n                      iconSize: new L.Point(120, 190),\n                      className: 'dummy'\n                      }) \n                  }\n  */","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leaf\":\"leaf_leaf__2x8H4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loc\":\"location_loc__24hxq\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}