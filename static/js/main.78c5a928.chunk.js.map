{"version":3,"sources":["components/infoBox.module.css","App.js","components/Location.js","components/Match.js","components/FavoritesList.js","components/Search.js","components/Leaf.js","components/Favorites.js","components/InfoBox.js","components/leaf.module.css","components/location.module.css","serviceWorker.js","index.js"],"names":["module","exports","App","props","markerClick","station","e","setState","selectedStation","filterStation","myStation","state","stationsStatus","data","stations","filter","d","station_id","console","log","selectedStationStatus","showInfo","setUserLocation","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","newViewport","height","width","zoom","viewport","userLocation","findMatches","wordToMatch","my_obj","place","regex","RegExp","name","match","updateMatches","newStateMatches","searchInput","stationsInfo","map","matches","handleInputChange","event","preventDefault","target","value","length","showMatches","alertClicked","address","arr","eval","logFavorites","favorites","push","removeFavorites","favorite","filterFavorites","newFavorites","listFavorites","handleShow","show","handleClose","buttonStyles","borderRadius","backgroundColor","showStations","requestStationInfo","a","fetch","then","res","json","requestStationStatus","style","zIndex","display","marginLeft","marginRight","textShadow","marginTop","color","outlineColor","this","Component","Location","onClick","src","Match","MatchStyles","margin","ImgStyles","float","ImgStylesLoc","Item","className","action","lat","lon","toLowerCase","alt","FavoritesList","variant","onHide","Header","closeButton","Title","Body","Footer","Search","SearchStyles","padding","placeholder","onChange","Leaf","markers","Marker","Map","center","top","bottom","TileLayer","attribution","url","Favorites","InfoBox","showData","textStyle","textAlign","info","classes","container","nl2br","num_bikes_available","num_ebikes_available","num_docks_available","buttonContainer","Button","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.78c5a928.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"infoBox_container__1bzFz\",\"buttonContainer\":\"infoBox_buttonContainer__3o83o\"};","\n//import logo from './logo.svg';\n//import './App.css';\n\nimport React, { Component } from 'react';\nimport Leaf from './components/Leaf';\nimport InfoBox from './components/InfoBox';\nimport Location from './components/Location';\nimport Match from './components/Match'\nimport classes from './app.module.css';\nimport FavoritesList from './components/FavoritesList';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      viewport: {\n        height: \"100vh\",\n        width: \"100vw\",\n        latitude: 40.7128,\n        longitude: -74.0060,\n        zoom: 10\n      },\n      buttonStyles :{\n        width:\"60px\",\n        height:\"60px\",\n        borderRadius:\"50%\",\n        backgroundColor: \"white\"\n      },\n      zoom: 10,\n      searchInput: \"\",\n      stationsInfo: [],\n      stationsStatus: [],\n      showMatches:false,\n      showStations: false,\n      showInfo: false,\n      selectedStation: [],\n      selectedStationStatus: [],\n      userLocation: {},\n      matches:[],\n      favorites:[],\n      show:false\n    };\n  }\n\n\n  componentDidMount() {\n    const requestStationInfo = async()=> {\n      await fetch('https://gbfs.citibikenyc.com/gbfs/en/station_information.json')\n      .then(res => res.json())\n      .then(res=>\n        this.setState({stationsInfo: res, showStations: true}))\n    }\n\n    const requestStationStatus = async()=> {\n      await fetch('https://gbfs.citibikenyc.com/gbfs/en/station_status.json')\n      .then(res => res.json())\n      .then(res=>\n        this.setState({stationsStatus: res}))\n    }\n\n    requestStationInfo();\n    requestStationStatus();\n  }\n\n\n  markerClick = (station) => (e) =>{\n    //console.log(station)\n    this.setState({selectedStation:station});\n    this.filterStation(station);\n  }\n\n  filterStation = (station) => {\n    //filter station from stationStatus\n    const myStation = this.state.stationsStatus.data.stations.filter(d => {\n      return (d.station_id === station.station_id);\n    })\n    console.log(myStation['0']);\n    this.setState({selectedStationStatus: myStation['0'], showInfo: true});\n    \n  }\n\n  setUserLocation = () => {\n    console.log(\"attempting to get user location ...\")\n    navigator.geolocation.getCurrentPosition(position => {\n  \n    let setUserLocation = [position.coords.latitude, position.coords.longitude];\n    console.log('user is at', setUserLocation);\n\n    let newViewport = {\n      height: \"100vh\",\n      width: \"100vw\",\n      latitude: position.coords.latitude,\n      longitude: position.coords.longitude,\n      zoom: 15\n    };\n\n    this.setState({\n        viewport: newViewport,\n        userLocation: setUserLocation,\n        position: setUserLocation\n    });\n    });\n  }\n\n  findMatches = (wordToMatch, my_obj) => {\n    return my_obj.data.stations.filter(place => {\n    //console.log(place.name)\n    // here we need to figure out the matches\n    const regex = new RegExp(wordToMatch, 'gi');\n    //console.log(place.name.match(regex))\n    return place.name.match(regex)\n    });\n  }\n\n  updateMatches =() => {\n    //console.log(this.state.searchInput)\n    const matchArray = this.findMatches(this.state.searchInput, this.state.stationsInfo);\n    const newStateMatches = matchArray.map(place => {\n    //console.log(place);\n    return place \n    });\n    this.setState({matches:newStateMatches})\n  }\n\n  handleInputChange = (event) => {\n    event.preventDefault()\n    //console.log(event.target.value)\n    if (event.target.value.length === 0) {\n      this.setState({searchInput: \"\", showMatches: false, matches: [] })\n      return\n  }\n      this.setState({searchInput: event.target.value })\n      this.updateMatches()  \n  }\n \n  alertClicked = (address)=> {\n    let arr = eval(address.target.value);\n    console.log(arr)\n    let newViewport = {\n      height: \"100vh\",\n      width: \"100vw\",\n      latitude: arr[0],\n      longitude: arr[1],\n      zoom: 15\n    }\n    this.setState({viewport: newViewport, matches: []});\n  }\n\n  logFavorites=()=>{\n    console.log('logging favorites')\n    console.log(this.state.selectedStation);\n    this.state.favorites.push(this.state.selectedStation);\n  }\n\n  removeFavorites=(favorite) => (e) =>{\n    console.log(favorite)\n    this.filterFavorites(favorite)\n  }\n\n  filterFavorites = (favorite) => {\n    //filter station from stationStatus\n    let newFavorites=[]\n    newFavorites = this.state.favorites.filter(d => {\n      return (d.station_id != favorite.station_id);\n    })\n    this.setState({favorites: newFavorites});\n    \n  }\n\n\n  listFavorites =()=>{\n    console.log(this.state.favorites)\n    this.handleShow();\n  }\n\n  handleShow = () => {\n    console.log('attempting to show modal')\n    this.setState({ show: true });\n  };\n\n  handleClose = () => {\n    this.setState({ show: false });\n  };\n\n\n  render() {\n\n    const textStyle={\n      textAlign: \"center\"\n     }\n    \n    const titleText={\n      position: \"absolute\",\n      zIndex: \"1000\",\n      display: \"flex\",\n      width: \"10%\",\n      //margin: \"auto\"\n      marginLeft: \"45%\",\n      marginRight: \"45%\",\n      textShadow: \"2px 2px 0px  #fff\",\n      marginTop: \"1%\"\n    }\n    \n\n    return (\n      <div>\n          <div style={titleText}>\n            <h2 style={{color:\"#00008B\", outlineColor:\"coral\"}}>City</h2>\n            <h2 style={{color:\"#00BFFF\", outlineColor:\"coral\"}}>Bike</h2>\n          </div>\n          <Match \n            matches={this.state.matches}\n            alertClicked={this.alertClicked}\n            />\n          <FavoritesList \n            buttonStyles={this.state.buttonStyles}\n            listFavorites={this.listFavorites}\n            handleShow={this.handleShow}\n            handleClose={this.handleClose}\n            show={this.state.show}\n            favorites={this.state.favorites}\n            removeFavorites={this.removeFavorites}\n            />\n          <Location  \n            userLocation={this.state.userLocation}\n            setUserLocation={this.setUserLocation}\n            buttonStyles={this.state.buttonStyles}\n            />\n          <Leaf \n            viewport={this.state.viewport}\n            stationsInfo={this.state.stationsInfo}\n            showStations={this.state.showStations}\n            markerClick={this.markerClick}\n            buttonStyles={this.buttonStyles}\n            handleInputChange={this.handleInputChange}\n            />\n          <InfoBox \n            selectedStation={this.state.selectedStation}\n            selectedStationStatus={this.state.selectedStationStatus}\n            showInfo={this.state.showInfo}\n            buttonStyles={this.state.buttonStyles}\n            logFavorites={this.logFavorites}\n            selectedStation={this.state.selectedStation}\n            />\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n/**\n * checkData=()=>{\n    //console.log(this.state.stationsInfo)\n    //this.state.stationsInfo.data.stations.map(e=>{\n    //  console.log(e)\n    //})\n\n    //console log station status\n    this.state.stationsStatus.data.stations.map(e=>{\n      console.log(e)\n    })\n  }\n * \n\n\n     checkData=()=>{\n        this.props.stationsInfo.data.stations.map(e=>{\n          console.log(e)\n        })\n      }\n      \n */","import React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\nimport classes from './location.module.css'\n\nclass Location extends Component {\n\n    \n    render() {\n\n        const locStyles = {\n            position: \"absolute\",\n            zIndex: \"1000\",\n            width: \"5%\",\n            marginLeft:\"5%\",\n            marginRight: \"80%\",\n            marginTop: \"80%\",\n        }\n\n        return (\n            <div style={locStyles}>\n                <button \n                    style = {this.props.buttonStyles}\n                    onClick={this.props.setUserLocation}\n                    >\n                    <img src=\"https://img.icons8.com/office/40/000000/worldwide-location.png\"></img>\n                </button> \n            </div>\n        );\n    }\n}\n\n\nexport default Location;","import React, { Component } from 'react';\nimport {ListGroup, Form} from 'react-bootstrap';\n\nclass Match extends Component {\n    render() {\n\n        const MatchStyles = {\n            height: \"10%\",\n            width: \"80%\",\n            zIndex: \"1000\",\n            margin: \"auto\"\n        }\n    \n        const ImgStyles = {\n            float: \"right\",\n            //display: \"inline\",\n            //marginTop:\"-11%\",\n            height: \"4%\",\n            width: \"4%\"\n        }\n    \n        const ImgStylesLoc = {\n            float: \"left\",\n            //display: \"inline\",\n            //marginTop:\"-11%\",\n            height: \"4%\",\n            width: \"4%\"\n        }\n\n        return (\n            <div>\n                 <li>\n                {\n                    this.props.matches.map(match => {\n                        const address=match.name;\n                    return  <ListGroup.Item\n                                style={MatchStyles} \n                                className=\"Matches\"\n                                action  \n                                value={`[${match.lat}, ${match.lon}]`}\n                                // function expressions could cause this to rerender unnecessarily.\n                               onClick={(address) => this.props.alertClicked(address)}> \n                               {`${address.toLowerCase()}`}\n                                    <img \n                                        style={ImgStyles}\n                                        src=\"https://img.icons8.com/ios-glyphs/32/000000/up-left-arrow.png\" alt = \"arrow\">\n                                    </img>\n                                    <img\n                                        style={ImgStylesLoc} \n                                        src=\"https://img.icons8.com/material/24/000000/worldwide-location--v1.png\" alt= \"userloc\"> \n                                    </img>\n                            </ListGroup.Item>\n                        })\n                }\n                </li>\n            </div>\n        );\n    }\n}\n\nexport default Match;","import React, { Component } from 'react';\nimport { Button, Modal, cardClass } from 'react-bootstrap';\n\n\nclass FavoritesList extends Component {\n    render() {\n\n        const favStyles = {\n            position: \"absolute\",\n            zIndex: \"1000\",\n            width: \"5%\",\n            marginLeft:\"5%\",\n            marginRight: \"80%\",\n            marginTop: \"65%\",\n        }\n\n        let favorites =null;\n        if(this.props.favorites) {\n        favorites = (\n            \n            this.props.favorites.map((favorite) =>\n                <div style={{width:\"100%\"}}>\n                    {favorite.name}\n                    <button \n                        onClick={this.props.removeFavorites(favorite)}\n                        >X</button>\n                </div>\n                )\n            \n        )\n        }\n\n        return (\n            <div style={favStyles}>\n                <button\n                    variant=\"primary\"\n                    style={this.props.buttonStyles}\n                    onClick={this.props.listFavorites}\n                >\n                    <img src=\"https://img.icons8.com/offices/40/000000/add-to-favorites.png\"></img>\n                </button>\n\n                    <Modal \n                        show={this.props.show} \n                        onHide={this.props.handleClose}>\n                    <Modal.Header closeButton>\n                    <Modal.Title>My Favorites List</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div>\n                            {favorites}\n                        </div>\n                    </Modal.Body>\n                    <Modal.Footer>\n                    <Button \n                        variant=\"secondary\" \n                        onClick={this.props.handleClose}>\n                        Close\n                    </Button>\n                    </Modal.Footer>\n                    </Modal>          \n            </div>\n        );\n    }\n}\n\nexport default FavoritesList;           ","import React, { Component } from 'react';\nimport {ListGroup, Form} from 'react-bootstrap';\nimport classes from './search.module.css';\n\nclass Search extends Component {\n    \n    SearchStyles = {\n        position: \"absolute\",\n        margin: \"auto\",\n        zIndex:\"1000\",\n        width: \"50%\",\n        borderRadius: \"25px\",\n        padding: \"2%\",\n        marginLeft: \"25%\",\n        marginRight: \"25%\",\n        marginTop: \"10%\"\n    }\n    \n    render() {\n    \n\n        return (\n            <div>\n                <input\n                    style={this.SearchStyles}\n                    placeholder=\"Search for a Link Near you...\"\n                    onChange={this.props.handleInputChange}\n                />   \n            </div>\n        );\n    }\n}\n\nexport default Search  ","import React, {Component} from 'react';\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\nimport classes from './leaf.module.css';\nimport Search from './Search';\n//import './leaf.css'\n//import InfoBox from './InfoBox';\nimport { Button } from 'react-bootstrap';\n//import Search from './Search';\n//import Match from './Match';\n//import Modal from './Modal';\n//import L from 'leaflet';\n//import Routing from \"./RoutingMachine\";\n//import { Row, Col, Grid, Container } from 'react-bootstrap';\n//import ErrorBoundary from '../ErrorBoundary/ErrorBoundary'\n\n\n \nclass Leaf extends Component {\n\n    render() {\n\n        let markers =null;\n        if(this.props.showStations) {\n        markers = (\n            \n            this.props.stationsInfo.data.stations.map((station) =>\n                <Marker \n                    position={[station.lat, station.lon]}\n                    onClick={this.props.markerClick(station)}>\n                </Marker>\n                )\n            \n        )\n        }\n\n        const mapStyles = {\n            position: \"relative\",\n            top: \"0\",\n            bottom: \"0\",\n            width: \"100vw\",\n            height: \"70vh\"\n          }\n    \n       \n        const position = [this.props.viewport.latitude, this.props.viewport.longitude]\n        //const position = [40.7484, -73.9857]\n        return (\n            <div>\n                <Search\n                  buttonStyles={this.props.buttonStyles}\n                  handleInputChange={this.props.handleInputChange}\n                    />\n                <Map center={position} \n                     zoom={this.props.viewport.zoom}\n                     style= {mapStyles}\n                     >\n                    <TileLayer\n                        attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    />\n                      {markers}\n                </Map>  \n            </div>\n        );\n    }\n}\n\nexport default Leaf;\n\n/**\n * \n * const markers = this.props.data.stations.map((station) =>\n        <Marker \n          position={[station.lat, station.lon]}\n          onClick={this.markerClick.bind(this,station)}>\n          <Popup>\n            <div style={{\"textAlign\": \"left\"}}>\n            <span> \n                  <h5 style={{\"textAlign\": \"left\"}}>hello</h5>\n                  <p></p>\n            </span>\n            </div>\n          </Popup>\n        </Marker>\n              );\n\n\n\n\n              const markers = this.props.stations.data.map((station) =>\n        <Marker \n          position={[station.lat, station.lon]}\n          onClick={this.markerClick.bind(this,station)}>\n          <Popup>\n          </Popup>\n        </Marker>\n              );\n */\n\n\n /**\n  * \n  * const Leaf = ( props ) => {\n\n    const checkData=()=>{\n        props.stations.data.stations.map(e=>{\n          console.log(e)\n        })\n      }\n\n    const markers = this.props.stations.data.stations.map((station) =>\n      <Marker \n        position={[station.lat, station.lon]}>\n      </Marker>\n            );\n\n\n    const position = [props.viewport.latitude, props.viewport.longitude]\n    \n    return (\n        <div>\n                <button onClick={checkData}>check props</button>\n                <Map center={position} zoom={14}>\n                    <TileLayer\n                        attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    />\n                    \n                    <Marker position={position}>\n                        <Popup>\n                            A pretty CSS3 popup. <br /> Easily customizable.\n                        </Popup>\n                    </Marker>\n                </Map>  \n            </div>\n    )\n}\n\n\n\n\n\n\n\n//latest\nlet markers =null;\n        if(this.props.stations.data.stations) {\n        markers = (\n            <div>\n            {\n            this.props.stations.data.stations.map((station) =>\n                <Marker \n                    position={[station.lat, station.lon]}>\n                </Marker>\n                )\n            }\n            </div>\n        )\n        }\n\n\n  * \n  */","import React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\n\nclass Favorites extends Component {\n    render() {\n        return (\n            <div>\n                <button\n                    style={{\n                        width:\"40px\",\n                        height:\"40px\",\n                        borderRadius:\"50%\",\n                        backgroundColor: \"white\"\n                    }}\n                    onClick={this.props.logFavorites}\n                >\n                    <img src=\"https://img.icons8.com/office/20/000000/add-to-favorites.png\"></img>    \n                </button>        \n            </div>\n        );\n    }\n}\n\nexport default Favorites;           ","import React, { Component } from 'react';\nimport classes from './infoBox.module.css'\nimport nl2br from 'react-newline-to-break';\nimport { Button } from 'react-bootstrap';\nimport Favorites from './Favorites';\n\nclass InfoBox extends Component {\n\n    showData=()=>{\n        console.log(this.props.selectedStation)\n    }\n\n    render() {\n\n        const textStyle={\n            textAlign: \"center\"\n        }\n\n        const favoritesStyle={\n            marginRight: \"10%\",\n            marginLeft: \"90%\",\n            marginTop: \"2%\"\n        }\n\n        const br = `\\n`;\n\n        let info =null;\n        if(this.props.showInfo) {\n        info = (\n            <div>\n                <div style={favoritesStyle}>\n                    <Favorites \n                        buttonStyles={this.props.buttonStyles}\n                        logFavorites={this.props.logFavorites}\n                        selectedStation={this.props.selectedStation}\n                    />\n                </div>\n            <div>\n                <h3 style={textStyle}>{`${this.props.selectedStation.name}`}</h3>\n            </div>\n            <div className={classes.container}>\n                <div style={textStyle}>{nl2br(`${this.props.selectedStationStatus.num_bikes_available}\\nBikes`)}</div>\n                <div style={textStyle}>{nl2br(`${this.props.selectedStationStatus.num_ebikes_available}\\nEbikes`)}</div> \n                <div style={textStyle}>{nl2br(`${this.props.selectedStationStatus.num_docks_available}\\nDocks`)}</div>\n            </div>\n\n            <div>\n\n            </div>\n            <br></br>\n            <br></br>\n            <br></br>\n            <div className={classes.buttonContainer}>\n                <div>\n                <Button>\n                    <img src=\"https://img.icons8.com/office/40/000000/bicycle.png\"/>\n                    <div>Buy Pass</div>\n                </Button>\n                </div>\n                <div>\n                <Button>\n                    <img src=\"https://img.icons8.com/office/40/000000/waypoint-map.png\"/>\n                    <div>Plan Ride</div>\n                </Button>\n                </div>\n            </div>\n            </div>\n            )\n        }\n\n        return (\n            <div>\n                {info}\n            </div>\n        );\n    }\n}\n\nexport default InfoBox;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leaf\":\"leaf_leaf__2x8H4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loc\":\"location_loc__24hxq\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}